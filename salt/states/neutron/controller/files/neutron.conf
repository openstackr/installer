{%- from "neutron/controller/files/map.jinja" import neutron_controller with context -%}
{%- from "rabbitmq/files/map.jinja" import rabbitmq with context -%}
{%- from "nova/controller/files/map.jinja" import nova_controller  with context -%}
{%- from "rabbitmq/files/map.jinja" import rabbitmq with context -%}

[DEFAULT]

core_plugin = ml2
service_plugins = router
auth_strategy = keystone
allow_overlapping_ips = True

notify_nova_on_port_status_changes = True
nova_url=http://{{ salt['publish.publish']('function:controller','grains.get','ipv4','grain').values()[0][0] }}:8774/v2
nova_region_name=regionone
nova_admin_username={{ nova_controller.name }}
nova_admin_tenant_name=service
nova_admin_password={{ nova_controller.password }}


rabbit_host={{ salt['publish.publish']('G@role:rabbitmq and G@rabbitmq-is-master:True','grains.get','ipv4','compound').values()[0][0] }}
rabbit_port=5672
rabbit_userid={{ rabbitmq.rabbitmq_name }}
rabbit_password={{ rabbitmq.rabbitmq_password }}
rpc_backend={{ rabbitmq.rpc_backend }} 


[keystone_authtoken]
auth_uri=http://{{ salt['publish.publish']('function:controller','grains.get','ipv4','grain').values()[0][0] }}:5000
identity_uri=http://{{ salt['publish.publish']('function:controller','grains.get','ipv4','grain').values()[0][0] }}:35357
admin_tenant_name=service
admin_user={{ neutron_controller.name }}
admin_password={{ neutron_controller.password }}

[database]
connection = mysql://{{ neutron_controller.name }}:{{ neutron_controller.password }}@{{ salt['publish.publish']('haproxy:*','grains.get','ipv4','grain').values()[0][0] }}/{{ neutron_controller.name }}

[service_providers]
service_provider=LOADBALANCER:Haproxy:neutron.services.loadbalancer.drivers.haproxy.plugin_driver.HaproxyOnHostPluginDriver:default
service_provider=VPN:openswan:neutron.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default
